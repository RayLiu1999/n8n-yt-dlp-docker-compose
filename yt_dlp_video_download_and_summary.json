{
  "name": "yt_dlp_video_download_and_summary",
  "nodes": [
    {
      "parameters": {
        "command": "=rm {{ $('讀音檔').item.json.directory }}/{{ $('讀音檔').item.json.fileName }}"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        240,
        400
      ],
      "id": "216f82a1-af29-4be9-b06e-19f1576b3fbd",
      "name": "刪除音檔"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "download_path",
              "value": "/home/node/downloads"
            },
            {
              "name": "online",
              "value": "0"
            },
            {
              "name": "url",
              "value": "={{ $json.query.url }}"
            },
            {
              "name": "quality",
              "value": "={{ $json.query.quality }}"
            },
            {
              "name": "format",
              "value": "={{ $json.query.format }}"
            }
          ],
          "number": [
            {
              "name": "summarize",
              "value": "={{ $json.query.summarize ?? 0 }}"
            },
            {
              "name": "token",
              "value": "={{ ($json.query.token) }}"
            }
          ]
        },
        "options": {}
      },
      "name": "取得GET參數",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -640,
        160
      ],
      "id": "49277103-869f-4e8f-85bc-005ba4c56984"
    },
    {
      "parameters": {
        "jsCode": "// 取得參數\nconst quality = $node['取得GET參數'].json['quality'];\nconst format = $node['取得GET參數'].json['format'];\nconst summarize = $node['取得GET參數'].json['summarize'];\nconst online = $node['取得GET參數'].json['online'];\nconst url = $node['取得GET參數'].json['url'];\n\n// 設置 yt-dlp 格式與檔名\nlet yt_dlp_format = '';\nlet mp3_format = ' -x --audio-format mp3';\nlet download_file_name  = '%(title)s';\nif (parseInt(online) === 1) {\n  download_file_name  = new Date().toISOString().replace(/[:.]/g, '');  \n}\n\n// 根據 quality 設置格式\nif (quality === 'highest') {\n  // 最高品質 - 不限制寬高\n  if (format === 'mp3') {\n    yt_dlp_format = 'bestaudio/best';\n  } else {\n    yt_dlp_format = 'bestvideo[vcodec^=av01][ext=mp4]+bestaudio[ext=m4a]/bestvideo[vcodec^=avc1][ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]';\n  }\n} else if (quality === 'high') {\n  // 高品質 - 限制最大 1920x1080\n  if (format === 'mp3') {\n    yt_dlp_format = 'bestaudio/best';\n  } else {\n    yt_dlp_format = 'bestvideo[vcodec^=av01][height<=1080][ext=mp4]+bestaudio[ext=m4a]/bestvideo[vcodec^=avc1][height<=1080][ext=mp4]+bestaudio[ext=m4a]/best[height<=1080]ext=mp4]';\n  }\n} else if (quality === 'medium') {\n  // 中等品質 - 限制最大 720p\n  if (format === 'mp3') {\n    yt_dlp_format = 'bestaudio/best';\n  } else {\n    yt_dlp_format = 'bestvideo[vcodec^=av01][height<=720][ext=mp4]+bestaudio[ext=m4a]/bestvideo[vcodec^=avc1][height<=720][ext=mp4]+bestaudio[ext=m4a]/best[height<=720][ext=mp4]';\n  }\n} else if (quality === 'low') {\n  // 低品質 - 限制最大 360p\n  if (format === 'mp3') {\n    yt_dlp_format = 'bestaudio/best';\n  } else {\n    yt_dlp_format = 'bestvideo[vcodec^=av01][height<=360][ext=mp4]+bestaudio[ext=m4a]/bestvideo[vcodec^=avc1][height<=360][ext=mp4]+bestaudio[ext=m4a]/best[height<=360][ext=mp4]';\n  }\n} else {\n  // 預設為中等品質\n  if (format === 'mp3') {\n    yt_dlp_format = 'bestaudio/best';\n  } else {\n    yt_dlp_format = 'bestvideo[vcodec^=av01][height<=720][ext=mp4]+bestaudio[ext=m4a]/bestvideo[vcodec^=avc1][height<=720][ext=mp4]+bestaudio[ext=m4a]/best[height<=720][ext=mp4]';\n  }\n}\n\n// 設置 mp3 品質與檔名\nif (format === 'mp3' && parseInt(summarize) === 1) {\n  mp3_format += ' --audio-quality 9';\n  // 依照日期和時間命名\n  download_file_name = new Date().toISOString().replace(/[:.]/g, '') + '_mp3';\n}\n\n// 設置video id\n$node['取得GET參數'].json['video_id'] = url.match(/[?&]v=([^&]*)/)?.[1];\n\n// 返回結果\nreturn [{\n  json: {\n    ...$node['取得GET參數'].json,\n    download_file_name,\n    yt_dlp_format,\n    yt_dlp_extra: format === 'mp3' ? mp3_format : ''\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        160
      ],
      "id": "4ae22325-c676-4ac5-80bb-defcee37184c",
      "name": "判斷下載影片類型"
    },
    {
      "parameters": {
        "command": "=# 下載影片\nyt-dlp --no-mtime -f \"{{ $json.yt_dlp_format }}\" {{ $json.yt_dlp_extra }} -o \"{{ $node['取得GET參數'].json['download_path'] }}/{{ $json.download_file_name }}.%(ext)s\" \"{{ $node['取得GET參數'].json['url'] }}\""
      },
      "name": "下載影片or音檔",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        220,
        160
      ],
      "id": "9c400907-c7ec-480e-8a03-175a41eaa123",
      "notes": "-f \"bestvideo[ext=mp4][height<=720]+bestaudio[ext=m4a]/best[ext=mp4]\""
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2ebe59c5-0be9-4cee-a7a2-43f4c3b0130d",
              "leftValue": "={{ parseInt($('取得GET參數').item.json.summarize) }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "8a0e5434-30f2-4b49-96b8-ffb0b43fc435",
              "leftValue": "={{ $('取得GET參數').item.json.token }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        440,
        160
      ],
      "id": "ad181945-1ace-47e3-a189-771768607992",
      "name": "參數是否有帶上總結"
    },
    {
      "parameters": {
        "fileSelector": "={{ $('取得GET參數').item.json.download_path }}/{{ $('判斷下載影片類型').item.json.download_file_name }}.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -820,
        420
      ],
      "id": "853d637a-be3c-4d88-a0ba-b9eb0a61ff1b",
      "name": "讀音檔"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/audio/transcriptions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('取得GET參數').item.json.token }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "model",
              "value": "gpt-4o-mini-transcribe"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -640,
        420
      ],
      "id": "bff43f94-eb5f-480b-8e53-e14648632c0b",
      "name": "gpt-4o-mini-transcribe",
      "alwaysOutputData": true,
      "retryOnFail": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1da500f5-17f7-49b3-a0fe-f6f87ffa3d55",
              "leftValue": "={{ $('gpt-4o-mini-transcribe').item.json.text }}",
              "rightValue": "=",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -440,
        420
      ],
      "id": "cd3c8550-5ee7-416b-8358-0c3f37ccf356",
      "name": "如果沒有失敗(太長會失敗)"
    },
    {
      "parameters": {
        "fileSelector": "={{ $('取得GET參數').item.json.download_path }}/{{ $('判斷下載影片類型').item.json.download_file_name }}.mp3",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -280,
        640
      ],
      "id": "5957b7f7-29d7-4fee-bd8f-e2a0523f7b85",
      "name": "重讀音檔"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/audio/transcriptions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('取得GET參數').item.json.token }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "model",
              "value": "whisper-1"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -120,
        640
      ],
      "id": "20f94e4a-9692-4f62-a1b4-f19cbbe12d2a",
      "name": "whisper-1",
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('取得GET參數').item.json.token }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"gpt-4o-mini-2024-07-18\",\n    \"messages\": [\n      {\n        \"role\": \"developer\",\n        \"content\": \"你是逐字稿的總結大師\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": \"幫我找出重點並詳細總結以下影片的逐字稿，並且統一以繁體中文回答。{{ $('gpt-4o-mini-transcribe').item.json.text ?? $('whisper-1').item.json.text }}\"\n      }\n    ]\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        400
      ],
      "id": "7264fb46-532a-403d-a48d-69a6da2bb4f3",
      "name": "4o-mini總結",
      "alwaysOutputData": true,
      "retryOnFail": false
    },
    {
      "parameters": {
        "jsCode": "const quality = $node['取得GET參數'].json['quality'];\nconst format = $node['取得GET參數'].json['format'];\nconst summarize = $node['取得GET參數'].json['summarize'];\nconst token = $node['取得GET參數'].json['token'];\n\nreturn [{\n  json: {\n    status: \"false\",\n    \"message\": \"token is Required\"\n  },\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "20fd238b-7b67-4908-abe6-9805824de8d3",
      "name": "返回錯誤"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e2efbdb8-51c5-4db2-b09e-92cd5077dd28",
              "leftValue": "={{ parseInt($json.query.summarize) }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "10d98af0-ac72-449c-bd96-e399b7e61155",
              "leftValue": "={{ $json.query.token }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -220,
        160
      ],
      "id": "caa92c8d-d08e-4f53-baac-a26de00084d0",
      "name": "如果總結且無帶token"
    },
    {
      "parameters": {
        "path": "download-video",
        "authentication": "headerAuth",
        "responseMode": "lastNode",
        "options": {}
      },
      "name": "下載＆總結影片",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -820,
        160
      ],
      "id": "1fcdaddc-f7a6-4a42-a8fb-106793c0d226",
      "webhookId": "dc15093e-6778-4f3a-bc73-75a0c0691596",
      "credentials": {
        "httpHeaderAuth": {
          "id": "whdeP2Z5BXGhSFJj",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 根據 Webhook 的 query 參數動態生成回應\nconst url = $node['取得GET參數'].json['url'];\nconst download_file_name = $node['判斷下載影片類型'].json['download_file_name'];\nconst online = $node['取得GET參數'].json['online'];\nconst ext = $node['取得GET參數'].json['format'];\nlet response;\n\nresponse = {\n  status: \"success\",\n  message: \"影片下載成功！\",\n  data: {\n    url,\n    online,\n    download_file_name: download_file_name + '.' + ext,\n  }\n};\n\nreturn [{ json: response }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        160
      ],
      "id": "1d26a08f-b1f6-4ef2-855a-1fd326b9c44e",
      "name": "返回下載影片"
    },
    {
      "parameters": {
        "jsCode": "// 根據 Webhook 的 query 參數動態生成回應\nconst content = $node['4o-mini總結'].json['choices'][0].message.content;\nconst title = $node['取得GET參數'].json['query']['title'];\nconst url = $node['取得GET參數'].json['query']['url'];\nlet response;\n\nresponse = {\n  \"status\": \"success\",\n  \"message\": \"總結成功！\",\n  \"data\": {\n    \"content\": content,\n    \"generated_time\": Date.now()\n  }\n}\n\nreturn [{ json: response }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        400
      ],
      "id": "fb2aeb41-c755-4009-8bb5-4f5e3019ef80",
      "name": "返回總結"
    },
    {
      "parameters": {
        "command": "=# 線上則刪除\nif [ {{ $json.online }} = \"1\" ]; then\n  # 刪除1小時以前的檔案\n  find {{ $json.download_path }} -maxdepth 1 -type f -name \"*\" -mmin +60 -exec rm -f {} \\;\nfi"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -440,
        160
      ],
      "id": "c6d632e7-bce9-4750-9145-cb5a36a4f6fb",
      "name": "刪除1小時以前檔案"
    },
    {
      "parameters": {
        "command": "=#!/bin/bash\n\n# 定義要寫入的文字\ntext=\"{{ $('4o-mini總結').item.json.choices[0].message.content }}\"\nfilename=\"{{ $('取得GET參數').item.json.query.title }}\"\npath=\"/home/node/downloads/Youtube影片總結文字/\"\nvideo_id=\"{{ $('判斷下載影片類型').item.json.video_id }}\"\next=\"md\"\n\n# 將 / 替換為 _，並移除其他可能導致問題的字符\nclean_filename=$(echo \"$filename\" | sed 's/\\//_/g; s/[?:*]//g')\n\n# 確保目錄存在，若不存在則建立\nmkdir -p \"$path\"\n\n# 將文字追加到檔案\necho \"$text\" >> \"${path}${clean_filename}_${video_id}.${ext}\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        660,
        400
      ],
      "id": "599172ab-8887-4cda-91db-10d8f044d7a7",
      "name": "產生總結檔案"
    },
    {
      "parameters": {
        "command": "=#!/bin/bash\n\n# 定義要寫入的文字\ntext=\"{{ $('gpt-4o-mini-transcribe').item.json.text ?? $('whisper-1').item.json.text }}\"\nfilename=\"{{ $('取得GET參數').item.json.query.title }}\"\npath=\"/home/node/downloads/Youtube影片逐字稿/\"\nvideo_id=\"{{ $('判斷下載影片類型').item.json.video_id }}\"\next=\"md\"\n\n# 將 / 替換為 _，並移除其他可能導致問題的字符\nclean_filename=$(echo \"$filename\" | sed 's/\\//_/g; s/[?:*]//g')\n\n# 確保目錄存在，若不存在則建立\nmkdir -p \"$path\"\n\n# 將文字追加到檔案\necho \"$text\" >> \"${path}${clean_filename}_${video_id}.${ext}\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        60,
        400
      ],
      "id": "7c6cb052-4fd4-4313-9f4e-d1b22b8d9d34",
      "name": "產生逐字稿檔案"
    },
    {
      "parameters": {
        "path": "summary-content",
        "authentication": "headerAuth",
        "responseMode": "lastNode",
        "options": {}
      },
      "name": "取得已下載總結文字",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -820,
        880
      ],
      "id": "6c7b067f-3897-4b0e-aef6-30d62704f15e",
      "webhookId": "dc15093e-6778-4f3a-bc73-75a0c0691596",
      "credentials": {
        "httpHeaderAuth": {
          "id": "whdeP2Z5BXGhSFJj",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "viedo_id",
              "value": "={{ $json.query.viedo_id }}"
            }
          ]
        },
        "options": {}
      },
      "name": "取得GET參數-summary",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -600,
        880
      ],
      "id": "18b6d98c-a737-4fa1-af84-61b183de414b"
    },
    {
      "parameters": {
        "jsCode": "const fileData = JSON.parse($input.first().json.stdout);\nconst error = $input.first().json.error;\nlet response;\n\nif (!error) {\n  response = {\n    \"status\": \"success\",\n    \"message\": \"取得總結成功！\",\n    \"data\": {\n      \"content\": fileData.content,\n      \"generated_time\": fileData.modified_time\n    }\n  }\n}\nelse {\n  response = {\n    \"status\": \"error\",\n    \"message\": \"取得總結失敗\",\n  }\n}\n\n\nreturn [{ json: response }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -160,
        880
      ],
      "id": "647e3ae0-00f4-43f7-b6fb-99dd83926d04",
      "name": "返回總結1"
    },
    {
      "parameters": {
        "executeOnce": "={{ true }}",
        "command": "=# 定義變數\nvideo_id=\"{{ $json.query.video_id }}\"\npath=\"/home/node/downloads/Youtube影片總結文字/\"\next=\"md\"\n\n# 尋找匹配 video_id 的檔案\nfilename=$(ls \"${path}\"*\"${video_id}.${ext}\" 2>/dev/null)\n\n# 檢查是否找到檔案\nif [ -z \"$filename\" ]; then\n    echo \"{\\\"error\\\": \\\"找不到匹配 ${video_id} 的檔案\\\"}\"\n    exit 1\nfi\n\n# 獲取檔案內容\ncontent=$(cat \"$filename\")\n# 獲取檔案最後修改時間戳 (Unix Timestamp，單位為秒)\nmtime=$(($(stat -c %Y \"$filename\") * 1000))\n\n# 檢查是否成功讀取內容\nif [ $? -eq 0 ]; then\n    # 使用 JSON 格式輸出內容和時間戳\n    echo \"{\\\"content\\\": $(echo \"$content\" | jq -R -s '.'), \\\"modified_time\\\": $mtime}\"\nelse\n    echo \"{\\\"error\\\": \\\"無法讀取 $filename\\\"}\"\n    exit 1\nfi"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -380,
        880
      ],
      "id": "d783004c-6eb2-46bd-83ce-213bab1f79a9",
      "name": "讀取總結檔案",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {},
  "connections": {
    "刪除音檔": {
      "main": [
        [
          {
            "node": "4o-mini總結",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "取得GET參數": {
      "main": [
        [
          {
            "node": "刪除1小時以前檔案",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "判斷下載影片類型": {
      "main": [
        [
          {
            "node": "下載影片or音檔",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "下載影片or音檔": {
      "main": [
        [
          {
            "node": "參數是否有帶上總結",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "參數是否有帶上總結": {
      "main": [
        [
          {
            "node": "讀音檔",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "返回下載影片",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "讀音檔": {
      "main": [
        [
          {
            "node": "gpt-4o-mini-transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4o-mini-transcribe": {
      "main": [
        [
          {
            "node": "如果沒有失敗(太長會失敗)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "如果沒有失敗(太長會失敗)": {
      "main": [
        [
          {
            "node": "產生逐字稿檔案",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "重讀音檔",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "重讀音檔": {
      "main": [
        [
          {
            "node": "whisper-1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "whisper-1": {
      "main": [
        [
          {
            "node": "產生逐字稿檔案",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4o-mini總結": {
      "main": [
        [
          {
            "node": "產生總結檔案",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "如果總結且無帶token": {
      "main": [
        [
          {
            "node": "返回錯誤",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "判斷下載影片類型",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "下載＆總結影片": {
      "main": [
        [
          {
            "node": "取得GET參數",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "刪除1小時以前檔案": {
      "main": [
        [
          {
            "node": "如果總結且無帶token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "產生總結檔案": {
      "main": [
        [
          {
            "node": "返回總結",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "產生逐字稿檔案": {
      "main": [
        [
          {
            "node": "刪除音檔",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "取得已下載總結文字": {
      "main": [
        [
          {
            "node": "取得GET參數-summary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "取得GET參數-summary": {
      "main": [
        [
          {
            "node": "讀取總結檔案",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "讀取總結檔案": {
      "main": [
        [
          {
            "node": "返回總結1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a21b67a5-cb33-4a15-81be-3d42048e2154",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5838cf392cb4a8451fada8b5db978b8be9bb392f6c1ccc58e25fc5a23b5d29ca"
  },
  "id": "mQy6mzpSM4vSZNkl",
  "tags": []
}